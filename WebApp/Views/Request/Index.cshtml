@* @model IEnumerable<WebApp.Models.RequestListViewModel>  *@  
@* yukarıdakini kapattık çünkü Request i alttaki model'e atadık *@
@model WebApp.Models.RequestListViewModel

@{
    ViewData["Title"] = "Taleplerim";
}

<h2>@ViewData["Title"]</h2>

<!-- Yeni Talep Butonu (Modal tetikleyici) -->
<button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createRequestModal">+ Yeni Talep</button>

<!-- Talep Listesi (Ajax ile yenilenecek alan) -->
<div id="requestList">
    @await Html.PartialAsync("_RequestListPartial", Model)
</div>

<!-- Yeni Talep Modalı -->
<div class="modal fade" id="createRequestModal" tabindex="-1" aria-labelledby="createRequestModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="createRequestForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="createRequestModalLabel">Yeni Talep Oluştur</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Title" class="form-label">Başlık</label>
                        <input type="text" class="form-control" id="Title" name="Title" required />
                    </div>
                    <div class="mb-3">
                        <label for="Description" class="form-label">Açıklama</label>
                        <textarea class="form-control" id="Description" name="Description" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Kaydet</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // Yeni Talep Ajax Post
            $('#createRequestForm').on('submit', function (e) {
                e.preventDefault();

                const formData = $(this).serialize();

                $.ajax({
                    url: '/Request/Create',
                    type: 'POST',
                    data: formData,
                    success: function () {
                        $('#createRequestModal').modal('hide');
                        $('#createRequestForm')[0].reset();

                        // Listeyi Ajax ile yenile
                        $('#requestList').load('/Request/List');
                    },
                    error: function () {
                        alert('Talep oluşturulurken bir hata oluştu.');
                    }
                });
            });

            // Sayfa numaralarına tıklama
            window.loadPage = function (page) {
                $('#requestList').load('/Request/List?page=' + page);
            };
        });

        // Silme işlemi (Delegated binding)
        $('#requestList').on('click', '.delete-request', function () {
            if (!confirm("Bu talebi silmek istediğinizden emin misiniz?")) {
                return;
            }

            const id = $(this).data('id');

            $.ajax({
                url: '/Request/DeleteConfirmed',
                type: 'POST',
                data: { id: id },
                success: function () {
                    $('#requestList').load('/Request/List');
                },
                error: function () {
                    alert('Silme işlemi sırasında bir hata oluştu.');
                }
            });
        });

    </script>
}





}


